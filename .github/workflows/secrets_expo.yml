name: Export GitHub Secrets to AES-Encrypted ENV

on:
  workflow_dispatch:

jobs:
  backup-secrets:
    runs-on: ubuntu-22.04
    steps:
      - name: Create secrets.env from GitHub Secrets
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" >> secrets.env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> secrets.env
          echo "API_KEY=${{ secrets.API_KEY }}" >> secrets.env

      - name: Encrypt secrets.env using Python-compatible AES
        shell: bash
        env:
          ARCHIVE_PASSWORD: ${{ secrets.ARCHIVE_PASSWORD }}
        run: >
          echo "import os" > encrypt.py &&
          echo "import hashlib" >> encrypt.py &&
          echo "from Crypto.Cipher import AES" >> encrypt.py &&
          echo "from Crypto.Protocol.KDF import PBKDF2" >> encrypt.py &&
          echo "from Crypto.Random import get_random_bytes" >> encrypt.py &&
          echo "" >> encrypt.py &&
          echo "password = os.environ['ARCHIVE_PASSWORD']" >> encrypt.py &&
          echo "salt = get_random_bytes(16)" >> encrypt.py &&
          echo "iv = get_random_bytes(16)" >> encrypt.py &&
          echo "key = PBKDF2(password.encode(), salt, dkLen=32, count=100000)" >> encrypt.py &&
          echo "" >> encrypt.py &&
          echo "with open('secrets.env', 'rb') as f:" >> encrypt.py &&
          echo "    data = f.read()" >> encrypt.py &&
          echo "" >> encrypt.py &&
          echo "pad_len = 16 - len(data) % 16" >> encrypt.py &&
          echo "data += bytes([pad_len] * pad_len)" >> encrypt.py &&
          echo "" >> encrypt.py &&
          echo "cipher = AES.new(key, AES.MODE_CBC, iv)" >> encrypt.py &&
          echo "ciphertext = cipher.encrypt(data)" >> encrypt.py &&
          echo "" >> encrypt.py &&
          echo "with open('secrets.env.enc', 'wb') as out:" >> encrypt.py &&
          echo "    out.write(salt + iv + ciphertext)" >> encrypt.py &&
          python3 encrypt.py

      - name: Upload encrypted secrets.env.enc as artifact
        uses: actions/upload-artifact@v4
        with:
          name: env-secrets-encrypted
          path: secrets.env.enc
