name: Export GitHub Secrets to AES-Encrypted ENV

on:
  workflow_dispatch:

jobs:
  backup-secrets:
    runs-on: ubuntu-22.04
    steps:
      - name: Create secrets.env from GitHub Secrets
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" >> secrets.env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> secrets.env
          echo "API_KEY=${{ secrets.API_KEY }}" >> secrets.env

      - name: Install cryptography
        run: python3 -m pip install cryptography

      - name: Encrypt secrets.env using Python-compatible AES (cryptography)
        shell: bash
        env:
          ARCHIVE_PASSWORD: ${{ secrets.ARCHIVE_PASSWORD }}
        run: >
          echo "import os" > encrypt.py &&
          echo "from cryptography.hazmat.backends import default_backend" >> encrypt.py &&
          echo "from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes" >> encrypt.py &&
          echo "from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC" >> encrypt.py &&
          echo "from cryptography.hazmat.primitives import padding" >> encrypt.py &&
          echo "from base64 import b64encode" >> encrypt.py &&
          echo "from os import urandom" >> encrypt.py &&
          echo "" >> encrypt.py &&
          echo "password = os.environ['ARCHIVE_PASSWORD'].encode()" >> encrypt.py &&
          echo "salt = urandom(16)" >> encrypt.py &&
          echo "iv = urandom(16)" >> encrypt.py &&
          echo "kdf = PBKDF2HMAC(algorithm=__import__('hashlib').sha256(), length=32, salt=salt, iterations=100000, backend=default_backend())" >> encrypt.py &&
          echo "key = kdf.derive(password)" >> encrypt.py &&
          echo "" >> encrypt.py &&
          echo "with open('secrets.env', 'rb') as f:" >> encrypt.py &&
          echo "    data = f.read()" >> encrypt.py &&
          echo "padder = padding.PKCS7(128).padder()" >> encrypt.py &&
          echo "padded_data = padder.update(data) + padder.finalize()" >> encrypt.py &&
          echo "cipher = Cipher(algorithms.AES(key), modes.CBC(iv), backend=default_backend())" >> encrypt.py &&
          echo "encryptor = cipher.encryptor()" >> encrypt.py &&
          echo "ciphertext = encryptor.update(padded_data) + encryptor.finalize()" >> encrypt.py &&
          echo "with open('secrets.env.enc', 'wb') as out:" >> encrypt.py &&
          echo "    out.write(salt + iv + ciphertext)" >> encrypt.py &&
          python3 encrypt.py

      - name: Upload encrypted secrets.env.enc as artifact
        uses: actions/upload-artifact@v4
        with:
          name: env-secrets-encrypted
          path: secrets.env.enc
